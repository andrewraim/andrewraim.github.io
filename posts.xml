<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Andrew M. Raim</title>
<link>https://andrewraim.github.io/posts.html</link>
<atom:link href="https://andrewraim.github.io/posts.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.54</generator>
<lastBuildDate>Tue, 16 Jul 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>fntl: Numerical Tools for Rcpp and Lambda Functions</title>
  <link>https://andrewraim.github.io/posts/2024-07-16-fntl.html</link>
  <description><![CDATA[ 




<p><a href="https://en.cppreference.com/w/cpp/language/lambda">Lambda functions</a> were added to C++ in the C++11 specification. They are functions which can be defined on the fly in the course of a program, make use of variables in the environment within their body, and be passed as arguments to other functions. Use of lambdas may be especially appealing for Rcpp programmers who are accustomed to working with function objects in R but occasionally need C++ when performance becomes a concern.</p>
<p>The objective of the R package <code>fntl</code> <span class="citation" data-cites="fntl">(Raim 2024a)</span> is to facilitate programming in Rcpp with lambda functions by providing an API to routinely needed numerical tools such as integration, root-finding, and optimization. Such functions require one or more functions as a primary argument; these are supplied as lambdas to <code>fntl</code>. Where possible, the <code>fntl</code> API utilizes methods exposed from the <a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html#The-R-API">R API</a> so that the same numerical methods are used as in R. In cases where methods are not exposed from the R API, <code>fntl</code> implements methods that are intended to be comparable. A detailed guide to the <code>fntl</code> API is provided in the package vignette <span class="citation" data-cites="fntl2024">(Raim 2024b)</span>.</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-fntl" class="csl-entry">
Raim, Andrew M. 2024a. <em><span class="nocase">fntl</span>: Numerical Tools for <span>Rcpp</span> and Lambda Functions</em>. <a href="https://github.com/andrewraim/fntl">https://github.com/andrewraim/fntl</a>.
</div>
<div id="ref-fntl2024" class="csl-entry">
———. 2024b. <span>“<span class="nocase">fntl</span>: Numerical Tools for <span>Rcpp</span> and Lambda Functions.”</span> Research Report Series: Computing #2024-01. Center for Statistical Research; Methodology, U.S.&nbsp;Census Bureau. <a href="https://www.census.gov/library/working-papers/2024/adrm/RRC2024-01.html">https://www.census.gov/library/working-papers/2024/adrm/RRC2024-01.html</a>.
</div>
</div></section></div> ]]></description>
  <category>article</category>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2024-07-16-fntl.html</guid>
  <pubDate>Tue, 16 Jul 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Rejection Sampling with Vertical Weighted Strips</title>
  <link>https://andrewraim.github.io/posts/2024-01-19-vws.html</link>
  <description><![CDATA[ 




<p>Rejection sampling is a classical algorithm <span class="citation" data-cites="vonNeumann1951">(Neumann 1951)</span> to generate variates from a target distribution where a constructive sampling method—e.g., by composing other random variables—may not be apparent. A benefit of rejection sampling is that accepted draws follow the target distribution exactly. However, coming up with a good proposal for rejection sampling can take some creativity. A poor choice can result in extremely low acceptance rates where practically no draws are accepted from a very large number of candidates.</p>
<p><span class="citation" data-cites="VWS2024">Raim, Livsey, and Irimata (2024+)</span> explore an approach to construct proposals by regarding the target as a weighted density and majorizing the weight function. This yields another weighted density whose unnormalized form can be used as an envelope in the acceptance ratio. If designed consciously, the normalized form can also be used to draw candidate variates to complete the rejection sampler. An improved proposal can be obtained by partitioning the support and majorizing within each region. Here the proposal is a finite mixture. The method is referred to as “vertical weighted strips” because it can be regarded as an extension of the vertical strips method <span class="citation" data-cites="Devroye1986 MartinoLuengoMiguez2018">(Devroye 1986, chap. VIII; Martino, Luengo, and Míguez 2018, sec. 3.6)</span>, with the weighted form introducing an additional degree of flexibility for algorithm development.</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Devroye1986" class="csl-entry">
Devroye, Luc. 1986. <em>Non-Uniform Random Variate Generation</em>. Springer.
</div>
<div id="ref-MartinoLuengoMiguez2018" class="csl-entry">
Martino, Luca, David Luengo, and Joaquín Míguez. 2018. <em>Independent Random Sampling Methods</em>. Springer. https://doi.org/<a href="https://dx.doi.org/10.1007/978-3-319-72634-2">https://dx.doi.org/10.1007/978-3-319-72634-2</a>.
</div>
<div id="ref-vonNeumann1951" class="csl-entry">
Neumann, John von. 1951. <span>“Various Techniques in Connection with Random Digits.”</span> In <em>Monte Carlo Methods</em>, edited by A. S. Householder, G. E. Forsythe, and H. H. Germond, 36–38. National Bureau of Standards Applied Mathematics Series. U.S. Government Printing Office, Washington, DC.
</div>
<div id="ref-VWS2024" class="csl-entry">
Raim, Andrew M., James A. Livsey, and Kyle M. Irimata. 2024+. <span>“Rejection Sampling with Vertical Weighted Strips.”</span> <a href="https://arxiv.org/abs/2401.09696">https://arxiv.org/abs/2401.09696</a>.
</div>
</div></section></div> ]]></description>
  <category>article</category>
  <guid>https://andrewraim.github.io/posts/2024-01-19-vws.html</guid>
  <pubDate>Fri, 19 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Sending Mail from R</title>
  <link>https://andrewraim.github.io/posts/2023-05-01-sendmail-R.html</link>
  <description><![CDATA[ 




<p>Here is a quick note on sending mail from R. For example, this could be useful in a long running job to alert yourself when it completes or halts because of an error. The <a href="https://cran.r-project.org/package=sendmailR">sendmailR</a> package provides a general interface to mail.</p>
<p>Here is an example where we use sendmailR to send mail to the local mailbox of our user (araim) on the host machine. This assumes we have a sendmail server set up to relay local mail and that araim has a mailbox.</p>
<p>The following call in R sends a message.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sendmail</span>(</span>
<span id="cb1-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sendmailR"</span>,</span>
<span id="cb1-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"araim"</span>,</span>
<span id="cb1-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subject =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello from R"</span>,</span>
<span id="cb1-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">msg =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is an email from R using the sendmailR package."</span>,</span>
<span id="cb1-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">smtpServer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>)</span>
<span id="cb1-7">)</span></code></pre></div>
</div>
<p>Here is how the message appears when viewed with <code>mutt</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">i:Exit  -:PrevPg  &lt;Space&gt;:NextPg  v:View Attachm.  d:Del  r:Reply  j:Next  ?:Help</span>
<span id="cb2-2">Date: Tue, 02 May 2023 09:24:31 -0000</span>
<span id="cb2-3">From: sendmailR@localhost</span>
<span id="cb2-4">To: araim@localhost</span>
<span id="cb2-5">Subject: Hello from R</span>
<span id="cb2-6"></span>
<span id="cb2-7">[-- Attachment #1 --]</span>
<span id="cb2-8">[-- Type: text/plain; charset=us-ascii, Encoding: 7bit, Size: 0.1K --]</span>
<span id="cb2-9"></span>
<span id="cb2-10">This is an email from R using the sendmailR package.</span>
<span id="cb2-11"></span>
<span id="cb2-12">-N +- 1155/1155: sendmailR@localhost   Hello from R                      -- (all)</span></code></pre></div>
<p>Here is an example of sending mail on an exception using <code>withCallingHandlers</code>. Here we use <code>sys.calls</code> to give some context about the call that led to the error.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) { <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"An exception!"</span>) }</span>
<span id="cb3-2">g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) { <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f</span>(x) }</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">withCallingHandlers</span>({</span>
<span id="cb3-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">g</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-6">}, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(e) {</span>
<span id="cb3-7">    result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sendmail</span>(</span>
<span id="cb3-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sendmailR"</span>,</span>
<span id="cb3-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"araim"</span>,</span>
<span id="cb3-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subject =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exception from R"</span>,</span>
<span id="cb3-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">msg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%d: %s"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sys.calls</span>()), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sys.calls</span>()),</span>
<span id="cb3-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">smtpServer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>)</span>
<span id="cb3-13">    )</span>
<span id="cb3-14">})</span></code></pre></div>
</div>
<p>And here is how the message appears when viewed with <code>mutt</code>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">i:Exit  -:PrevPg  &lt;Space&gt;:NextPg  v:View Attachm.  d:Del  r:Reply  j:Next  ?:Help</span>
<span id="cb4-2">Date: Tue, 02 May 2023 10:06:56 -0000</span>
<span id="cb4-3">From: sendmailR@localhost</span>
<span id="cb4-4">To: araim@localhost</span>
<span id="cb4-5">Subject: Exception from R</span>
<span id="cb4-6"></span>
<span id="cb4-7">[-- Attachment #1 --]</span>
<span id="cb4-8">[-- Type: text/plain; charset=us-ascii, Encoding: 7bit, Size: 0.6K --]</span>
<span id="cb4-9"></span>
<span id="cb4-10">1: withCallingHandlers({</span>
<span id="cb4-11">   g(1:10)</span>
<span id="cb4-12">}, error = function(e) {</span>
<span id="cb4-13">   result = sendmail(from = "sendmailR", to = "araim", subject = "Exception from</span>
<span id="cb4-14">+R", msg = sprintf("%d: %s", seq_along(sys.calls()), sys.calls()), control =</span>
<span id="cb4-15">+list(smtpServer = "localhost"))</span>
<span id="cb4-16">})</span>
<span id="cb4-17">2: g(1:10)</span>
<span id="cb4-18">3: f(x)</span>
<span id="cb4-19">4: stop("An exception!")</span>
<span id="cb4-20">5: .handleSimpleError(function (e) {</span>
<span id="cb4-21">   result = sendmail(from = "sendmailR", to = "araim", subject = "Exception from</span>
<span id="cb4-22">+R", msg = sprintf("%d: %s", seq_along(sys.calls()), sys.calls()), control =</span>
<span id="cb4-23">+list(smtpServer = "localhost"))</span>
<span id="cb4-24">}, "An exception!", base::quote(f(x)))</span>
<span id="cb4-25">6: h(simpleError(msg, call))</span>
<span id="cb4-26"></span>
<span id="cb4-27">-N +- 1162/1162: sendmailR@localhost   Exception from R                  -- (all)</span></code></pre></div>



 ]]></description>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2023-05-01-sendmail-R.html</guid>
  <pubDate>Mon, 01 May 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparison of Usability Preferences with Bivariate Ordinal Regression</title>
  <link>https://andrewraim.github.io/posts/2023-04-20-bivariate-ordinal-maps.html</link>
  <description><![CDATA[ 




<p>Suppose <img src="https://latex.codecogs.com/png.latex?n"> respondents are asked to rate several alternatives on a scale from, say, 1 to 5, with 1 being least preferred and 5 being most preferred. How can we determine whether one alternative is significantly more preferred to the others? The data may include covariates which are associated with the preference of interest.</p>
<p>Elizabeth Nichols and I carry out this kind of analysis on map usability in a recent report <span class="citation" data-cites="BivariateOrdinalMaps2023">(Raim and Nichols 2023)</span>. With ordinal data recorded in a survey setting, we compare preferences for satellite maps - which display details such as landmarks and terrain - to those of simplified road maps. We make use of a bivariate ordinal regression model to carry out the analysis. Computations are carried out using the <a href="https://cran.r-project.org/package=mvord">mvord</a> R package by <span class="citation" data-cites="HirkHornikVana2020">Hirk, Hornik, and Vana (2020)</span>, which can also support multivariate models with more than two alternatives.</p>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-HirkHornikVana2020" class="csl-entry">
Hirk, Rainer, Kurt Hornik, and Laura Vana. 2020. <span>“<span class="nocase">mvord</span>: An <span>R</span> Package for Fitting Multivariate Ordinal Regression Models.”</span> <em>Journal of Statistical Software</em> 93 (4): 1–41. <a href="https://doi.org/10.18637/jss.v093.i04">https://doi.org/10.18637/jss.v093.i04</a>.
</div>
<div id="ref-BivariateOrdinalMaps2023" class="csl-entry">
Raim, Andrew M., and Elizabeth Nichols. 2023. <span>“A Comparison of Map Usability via Bivariate Ordinal Analysis.”</span> Study Series: Statistics #2023-01. Center for Statistical Research; Methodology, U.S.&nbsp;Census Bureau. <a href="https://www.census.gov/library/working-papers/2023/adrm/SSS2023-01.html">https://www.census.gov/library/working-papers/2023/adrm/SSS2023-01.html</a>.
</div>
</div></section></div> ]]></description>
  <category>article</category>
  <guid>https://andrewraim.github.io/posts/2023-04-20-bivariate-ordinal-maps.html</guid>
  <pubDate>Thu, 20 Apr 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Interactive Map with Shiny and Leaflet</title>
  <link>https://andrewraim.github.io/posts/2023-02-27-shiny-leaflet.html</link>
  <description><![CDATA[ 




<p>There are powerful tools for working with geographical data in R. For example, the <a href="https://cran.r-project.org/package=ggplot2">ggplot</a> and <a href="https://cran.r-project.org/package=sf">sf</a> packages can be used together to display such data. But what about interactive maps which support panning, zooming, and clicks to trigger actions (e.g., highlighting an area)?</p>
<p>One way to accomplish this is through <a href="https://shiny.rstudio.com">Shiny</a> and <a href="https://rstudio.github.io/leaflet">Leaflet</a>. With this combination of tools, it is relatively easy to stand up an graphical interface. Shiny supports constructs beyond routine R programming which allow variables, displays, and computations to react to user inputs. Leaflet provides widgets for interactive maps.</p>
<p>There are already a number of interesting examples on the web, but <a href="https://github.com/andrewraim/shiny-leaflet-example">here</a> is something I put together.</p>
<p><a href="../images/shiny-leaflet-example.png"><img src="https://andrewraim.github.io/images/shiny-leaflet-example-thumb.png" class="img-fluid"></a></p>
<p>It displays counties in Maryland along with some randomly placed markers, and displays the count of markers within each county as a choropleth. Users can remove existing markers or add new ones, which in turn triggers the counts to be recomputed and the choropleth to be updated.</p>



 ]]></description>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2023-02-27-shiny-leaflet.html</guid>
  <pubDate>Mon, 27 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Worker Tool for Computational Studies</title>
  <link>https://andrewraim.github.io/posts/2023-02-12-worker.html</link>
  <description><![CDATA[ 




<p>In a large statistical simulation or other computational study, it can be labor intensive to kick off all of the runs whose results will be harvested and summarized. <a href="https://github.com/andrewraim/worker">Worker</a> is a lightweight tool that seeks to help automate this process. This post gives a brief description; see the webpage for details.</p>
<p>Suppose our study consists of a parameter that is varied in some way, and we have determined that there are 999 levels of interest. Suppose that we have set up 999 corresponding directories, named as follows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span> ls <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-2">run001</span>
<span id="cb1-3">run002</span>
<span id="cb1-4">...</span>
<span id="cb1-5">run999</span></code></pre></div>
</div>
<p>In each folder, suppose there is a script <code>launch.R</code> that runs the corresponding level of the simulation. An output file <code>output.csv</code> is placed in the directory upon successful completion of <code>launch.R</code>. Running the <code>launch.R</code> scripts manually would be extremely tedious, but we could write a loop in our preferred shell scripting language to automate this.</p>
<p>The worker takes this concept slightly further; it loops through jobs and runs them sequentially, but multiple workers can be run simultaneously on the same study to achieve “embarrassingly parallel” parallel computing. Workers make use of use lock files to avoid stepping on each other’s toes. This paradigm can be useful in shared computing environments, where users may be asked to limit the number of CPUs requested at any given time. We can start, say, ten workers rather than having to continually monitor a scheduler’s queue and submit more jobs.</p>
<p>Here is an example of the syntax currently used to invoke each worker in this example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span> worker.sh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'run???'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>c <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rscript launch.R'</span></span></code></pre></div>
</div>
<p>After all of the runs are completed, we will likely want to load each of the <code>output.csv</code> files and construct tables and plots to summarize the results. This <a href="../posts/2023-02-11-latex-tables-from-R.html">post</a> may be helpful if you are looking to construct Latex tables from a computational study.</p>



 ]]></description>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2023-02-12-worker.html</guid>
  <pubDate>Sun, 12 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating Latex Tables in R</title>
  <link>https://andrewraim.github.io/posts/2023-02-11-latex-tables-from-R.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Preparing Latex tables from results of a simulation study or other program can be tedious and time-consuming when done by hand. Especially when the process must be repeated many tables as results are updated to correct mistakes or to investigate unexpected findings. Hours spent manually adjusting formatting of table entries and typing ampersands between them could be spent in better ways. Fortunately, there are some excellent tools in R to help. Taking time to learn the tools and automate your table generation may be worth the investment. We will give a brief example in this post. This is only based on my experience; there are likely even better tools and methods that I have yet to learn.</p>
</section>
<section id="objective" class="level1">
<h1>Objective</h1>
<p>Our objective will be to generate a Latex table for the first six rows of the <code>airquality</code> dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(airquality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb1-2">  Ozone Solar.R Wind Temp Month Day</span>
<span id="cb1-3"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.4</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">118</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-5"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">149</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.6</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-6"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">313</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>    <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>      <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.3</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">56</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>      <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.9</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">66</span>     <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span></code></pre></div>
</div>
<p>We would also like to meet the following criteria.</p>
<ol type="1">
<li>Criteria for formatting of the rendered Latex table.
<ol type="a">
<li>Use <a href="https://ctan.org/pkg/booktabs">booktabs</a> and make all separators horizontal lines.</li>
<li>Use multiline columns to render column names.</li>
<li>Add several headers which group together columns in the display.</li>
<li>Specify a caption and a label which can be used in Latex references.</li>
<li>Request the table to be placed “here”.</li>
</ol></li>
<li>Criteria for table content.
<ol type="a">
<li>Include row labels (observation number) in the table as a column.</li>
<li>Format numbers in a purposeful way.</li>
<li>Display the <code>Month</code> and <code>Day</code> columns together as a date.</li>
<li>Customize column names to be more descriptive.</li>
</ol></li>
<li>Ensure that the generated Latex code is legible.
<ol type="a">
<li>Pad strings in a given column so that they are nicely aligned in the code.</li>
</ol></li>
</ol>
<p>To do this, we will make use of the following tools.</p>
<ol type="1">
<li>The <a href="https://www.tidyverse.org">Tidyverse</a> framework to manipulate tables.</li>
<li>The <a href="https://yihui.org/knitr/">knitr</a> package for reproducible research in R. In particular, we will use the <a href="https://bookdown.org/yihui/rmarkdown-cookbook/kable.html">kable</a> function. to generate Latex from data frames.</li>
<li>The <a href="https://cran.r-project.org/package=kableExtra">kableExtra</a> package to handle some additional Latex work.</li>
<li>The built-in <code>sprintf</code> function to format table entries.</li>
</ol>
</section>
<section id="preparing-the-data-frame" class="level1">
<h1>Preparing the Data Frame</h1>
<p>First let us load the packages we will use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(knitr)</span>
<span id="cb2-2">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb2-4">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb2-5">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span></code></pre></div>
</div>
<p>Before converting to Latex, let us format the entries and column names as we would like them to appear.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">tbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(airquality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Num"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%04d-%02d-%02d"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973</span>, Month, Day)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Solar.R =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%0.2e"</span>, Solar.R)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TempC =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%0.2f"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (Temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Num, Date, Ozone, Solar.R, Wind, TempC)</span></code></pre></div>
</div>
<p>We have done the following.</p>
<ol type="1">
<li>Assemble <code>Month</code> and <code>Day</code> into <code>Date</code>, where 1973 is the year which all observations were taken (according to the manual page for the dataset).</li>
<li>Convert <code>Solar.R</code> to a string with the original value in scientific notation.</li>
<li>Convert temperature <code>Temp</code> from Farenheit to Celcius and call the result <code>TempC</code>.</li>
<li>Use <code>tibble::rownames_to_column</code> to include row labels in the table as the <code>Obs</code> column.</li>
</ol>
<p>This produces the following table.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(tbl)</span>
<span id="cb4-2">  Num       Date Ozone  Solar.R Wind TempC</span>
<span id="cb4-3"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-01</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.90e+02</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.4</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">19.44</span></span>
<span id="cb4-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-02</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.18e+02</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.22</span></span>
<span id="cb4-5"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-03</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.49e+02</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.6</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">23.33</span></span>
<span id="cb4-6"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-04</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.13e+02</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.5</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">16.67</span></span>
<span id="cb4-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-05</span>    <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>       <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.3</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.33</span></span>
<span id="cb4-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>   <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-06</span>    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>       <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.9</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18.89</span></span></code></pre></div>
</div>
</section>
<section id="generating-latex" class="level1">
<h1>Generating Latex</h1>
<p>We can now generate code to display out formatted table as Latex code.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tbl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Solar.R =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(Solar.R, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\u00A0"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Wind =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_pad</span>(Wind, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">side =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\u00A0"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latex"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">booktabs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linesep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rlrrrr"</span>),</span>
<span id="cb5-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My formatted airquality table."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"airquality"</span>,</span>
<span id="cb5-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ozone (PPB)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Radiation (Ly)"</span>,</span>
<span id="cb5-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wind (MPH)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temp (C)"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latex_options =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hold_position"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_above</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observation"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solar"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weather"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</div>
<p>We have done the following.</p>
<ol type="1">
<li><p>Left-pad the <code>Solar.R</code> and <code>Wind</code> fields with the unicode “nbsp” character, which will render as a space in our resulting code rather than be ignored, as a regular space would.</p></li>
<li><p>Use <code>kable</code> to generate a Latex table from our data frame. We have specified options such as cell alignments, the caption, and the label, which should be familiar to Latex users. We have also specified descriptive column names here.</p></li>
<li><p>The option <code>hold_position</code> specifies the option <code>!h</code> for how Latex should place the table.</p></li>
<li><p>The function <code>add_header_above</code> specifies a layer of headers above the column names. These respectively have text “Observation”, “Solar” and “Weather”, and are each two columns wide.</p></li>
</ol>
<p>Printing the result yields the following Latex code.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(out)</span>
<span id="cb6-2">\begin{table}[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>h]</span>
<span id="cb6-3">\centering</span>
<span id="cb6-4">\caption{\label{tab<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>airquality}My formatted airquality table.}</span>
<span id="cb6-5">\centering</span>
<span id="cb6-6">\begin{tabular}[t]{rlrrrr}</span>
<span id="cb6-7">\toprule</span>
<span id="cb6-8">\multicolumn{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}{c}{Observation} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> \multicolumn{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}{c}{Solar} <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> \multicolumn{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}{c}{Weather} \\</span>
<span id="cb6-9">\<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmidrule</span>(l{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}r{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}){<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1-2</span>} \<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmidrule</span>(l{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}r{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}){<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3-4</span>} \<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmidrule</span>(l{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}r{<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>pt}){<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5-6</span>}</span>
<span id="cb6-10">Number <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> Date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Ozone</span> (PPB) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Radiation</span> (Ly) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Wind</span> (MPH) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Temp</span> (C)\\</span>
<span id="cb6-11">\midrule</span>
<span id="cb6-12"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.90e+02</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">19.44</span>\\</span>
<span id="cb6-13"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-02</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.18e+02</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.22</span>\\</span>
<span id="cb6-14"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-03</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.49e+02</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">23.33</span>\\</span>
<span id="cb6-15"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-04</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.13e+02</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">16.67</span>\\</span>
<span id="cb6-16"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-05</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">13.33</span>\\</span>
<span id="cb6-17"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1973-05-06</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> &nbsp;&nbsp;<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">14.9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18.89</span>\\</span>
<span id="cb6-18">\bottomrule</span>
<span id="cb6-19">\end{tabular}</span>
<span id="cb6-20">\end{table}</span></code></pre></div>
</div>
<p>We now have a Latex <code>table</code> environment - which is fairly human-readable - that can be copy/pasted into a Latex document, or even included programmatically using <a href="../posts/2022-06-27-knitr-latex.html">Sweave</a>.</p>


</section>

 ]]></description>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2023-02-11-latex-tables-from-R.html</guid>
  <pubDate>Sat, 11 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>COMPoissonReg: Usage, the Normalizing Constant, and Other Computational Details</title>
  <link>https://andrewraim.github.io/posts/2022-11-15-compoissonreg.html</link>
  <description><![CDATA[ 




<p>I have been maintaining the <a href="https://CRAN.R-project.org/package=COMPoissonReg">COMPoissonReg</a> package, which facilitates use of the Conway-Maxwell Poisson (CMP) distribution. The normalizing constant of the CMP distribution is central to many computations in the package. Users have occasionally reported strange results that can be traced back to problems computing the normalizing constant. Early versions computed the constant by truncating the series to an finite sum with a fixed number of terms; however, this may yield inaccurate results. We addressed this to some degree in more recent versions in an ad hoc way. In the latest version (0.8.0) of the package, these computations have been revisited in a more principled way. Kimberly Sellers and I recently completed a <a href="https://www.census.gov/library/working-papers/2022/adrm/RRC2022-01.html">report</a> describing the updated method, which also demonstrates general use of the package. A vignette version of this report will be included in the package and updated along with any changes in the software.</p>



 ]]></description>
  <category>article</category>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2022-11-15-compoissonreg.html</guid>
  <pubDate>Tue, 15 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Browsing summary files from the decennial census with R</title>
  <link>https://andrewraim.github.io/posts/2022-08-15-sfreader.html</link>
  <description><![CDATA[ 




<p>If you have needed to use decennial census data without access to the internet, you may have encountered the raw data form of the summary files. These may be downloaded from the Census Bureau website for offline use; e.g., <a href="https://www.census.gov/data/datasets/2010/dec/summary-file-2.html">here</a>. The format of the files is compact but can be difficult to navigate. James Livsey, Kyle Irimata, and I prepared a <a href="https://www.census.gov/library/working-papers/2022/adrm/SSC2022-01.html">technical report</a> and a <a href="https://github.com/andrewraim/sfreader">package</a> to assist R users with this via the tidyverse. These materials focus on the 2010 SF2 summary file, but support for others may be added in the future as needed.</p>



 ]]></description>
  <category>article</category>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2022-08-15-sfreader.html</guid>
  <pubDate>Mon, 15 Aug 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>knitr and Latex Documents</title>
  <link>https://andrewraim.github.io/posts/2022-06-27-knitr-latex.html</link>
  <description><![CDATA[ 




<p>Rmarkdown seems to be the most standard way to embed R code and results into a document. Markdown has many benefits compared to Latex: it is much easier to get started with and the source code is closer to a plain readable text document. It is also possible to use Latex within Markdown when an occasional equation is needed. But sometimes you really want to work in Latex without going through Markdown.</p>
<p>I have been aware that Sweave allows embedded R for Latex documents, but it seemed archaic compared to more modern R tools for reproducible research, and I avoided using it. Recently, I was made aware that <a href="https://www.overleaf.com/learn/latex/Knitr">Overleaf</a> supports authoring Sweave documents which require very little special markup and are almost like working in regular Latex. After some additional searching, I found that this is also possible without Overleaf. <a href="https://CRAN.R-project.org/package=knitr">knitr</a> has <a href="https://yihui.org/knitr/demo/sweave/">long been able</a> to do this.</p>
<p>Examples of Sweave with knitr can be found online, but I thought it would be worthwhile to post several more. See the repo <a href="https://github.com/andrewraim/sweave-examples" class="uri">https://github.com/andrewraim/sweave-examples</a> for an example in article format <a href="https://github.com/andrewraim/sweave-examples/raw/master/article/article-knitr.pdf">(pdf)</a> and one in Beamer slide format <a href="https://github.com/andrewraim/sweave-examples/raw/master/slides/slides-knitr.pdf">(pdf)</a>.</p>



 ]]></description>
  <category>programming</category>
  <guid>https://andrewraim.github.io/posts/2022-06-27-knitr-latex.html</guid>
  <pubDate>Mon, 27 Jun 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Presentation for 2020 Joint Statistical Meetings</title>
  <link>https://andrewraim.github.io/posts/2020-08-03-JSM2020.html</link>
  <description><![CDATA[ 




<p>For this year’s virtual JSM, I am presenting in the session listed <a href="https://ww2.amstat.org/meetings/jsm/2020/onlineprogram/AbstractDetails.cfm?abstractid=309805">here</a>. Here are links to download the poster <a href="https://drive.google.com/uc?export=view&amp;id=1m4NIMm0kfrVRwsfigFHJDSUqOkCEHObA">PDF</a> and voiceover <a href="https://drive.google.com/uc?export=view&amp;id=1keGcR_2ZJ87nFicBbrPnvPh6nyGsvOLk">MP4</a>. Note that the files are hosted on Google Drive: if this is not accessible to you, email me for copies of the files.</p>



 ]]></description>
  <category>conference</category>
  <guid>https://andrewraim.github.io/posts/2020-08-03-JSM2020.html</guid>
  <pubDate>Mon, 27 Jul 2020 04:00:00 GMT</pubDate>
</item>
<item>
  <title>R Workshop in Kerala</title>
  <link>https://andrewraim.github.io/posts/2017-12-20-Kerala-workshop.html</link>
  <description><![CDATA[ 




<section id="about-the-workshop" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> About the Workshop</h1>
<p><a href="http://www.csm.ornl.gov/~ost/">George Ostrouchov</a>, <a href="http://www.math.umbc.edu/people/neerchal.htm">Nagaraj Neerchal</a> and I are giving a two-day workshop <strong>High Performance Statistical Computing using R</strong> at the <em>International Conference on Recent Advances in Statistical Methodology with Applications in Clinical and Official Statistics</em> <a href="https://icsa2018.wordpress.com/">(ICSA 2018)</a>, Department of Statistics, St.&nbsp;Thomas College, Pala, Kerala, India. An abstract and brief outline for the workshop are given <a href="https://icsa2018.wordpress.com/workshop/">here</a>.</p>
<p>The workshop builds up to parallel and distributed computing in R, but begins by introducing basics of working in R. Previous experience with R and Rstudio will be helpful, but much of the material should be accessible to new R users with experience in another technical computing language such as Matlab, Python, or Julia. Applications involving statistical and machine learning methods will be presented throughout the workshop. A bachelors degree in a discipline such as statistics, computer science, or mathematics - OR equivalent work experience - should be sufficient to understand the methodology.</p>
<p>Attendees are encouraged to bring their laptops. Many example codes will be provided, and there will be opportunities at some points during the workshop for users to follow along. If you will be bringing your laptop, the remainder of this page discusses how to prepare it for the workshop.</p>
<ul>
<li><p>It is possible to manually install R, Rstudio, and all packages that will be used in the workshop. But this is quite impractical, especially for the material on parallel and distributed programming which varies somewhat based on the computing platform (Windows, Mac, Linux). Therefore, we highly suggest a second option…</p></li>
<li><p>Instead, we have prepared a <a href="https://www.docker.com">Docker</a> container, which is like a virtual machine. This will provide all attendees with the same programming environment which contains all the software needed for the workshop.</p></li>
</ul>
<p>Instructions to obtain and run the Docker container are given below. For attendees who cannot install Docker, alternative instructions are provided further below.</p>
<p>Workshop contents such as slides, programs, and dataset will be provided at the start of the workshop.</p>
</section>
<section id="installing-docker" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Installing Docker</h1>
<p>Follow instructions to install Docker based on your computing platform (Windows, Mac, or Linux). Look for the Community Edition, for which there is no cost to use. Also, we recommend the Stable release rather than the Edge release. Here are some brief notes specific to platform.</p>
<section id="windows" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="windows"><span class="header-section-number">2.1</span> Windows</h2>
<p>Note that Windows users who do not have Windows 10 Pro or Enterprise - which will probably be most of us - will need a version of Docker called <a href="https://docs.docker.com/toolbox/overview/">Docker Toolbox</a>. Once it is installed, open the Docker Quickstart Terminal to issue commands, which should appear as follows.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://andrewraim.github.io/images/Kerala2018/win-docker-prompt.png" class="img-fluid figure-img"></p>
<figcaption>Logging into Rstudio Server</figcaption>
</figure>
</div>
<p>Take note of the IP address listed in the output; we will use it later when connecting to Rstudio.</p>
<p>I initially had some trouble installing Docker Toolbox on Windows 10 Home. I believe it was due to low disk space - I suggest having at least a 5-10 GB available before installing. For me, a solution was to remove Docker Toolbox, and the Oracle VirtualBox program installed with it, remove the <code>.docker</code> and <code>.virtualbox</code> subdirectories in <code>C:\Users\Andrew</code>, and rerun the Docker Toolbox installer. It may also be helpful to temporarily turn off Windows Firewall, or your antivirus program’s firewall if you have one, during the installation.</p>
</section>
<section id="linux" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="linux"><span class="header-section-number">2.2</span> Linux</h2>
<p>Linux users should follow the <a href="https://docs.docker.com/engine/installation/">installation instructions</a> specific to their Linux distribution (Ubuntu, CentOS, etc). Once it is installed, Docker can be controlled through the system terminal.</p>
<p>Note that Docker commands on Linux need administrator-level access, and must be prefixed with <code>sudo</code>. Because we anticipate mostly Windows users in attendance, the <code>sudo</code> has been left out of the commands shown on the remainder of this page.</p>
</section>
<section id="mac" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="mac"><span class="header-section-number">2.3</span> Mac</h2>
<p>Mac users should follow their set of <a href="https://docs.docker.com/engine/installation/">installation instructions</a>. As with Linux, once Docker is installed on a Mac, it can be controlled through the Terminal application. <code>sudo</code> is also needed for Mac when executing Docker commands.</p>
</section>
<section id="a-quick-test-of-your-docker-setup" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="a-quick-test-of-your-docker-setup"><span class="header-section-number">2.4</span> A Quick Test of your Docker Setup</h2>
<p>In your terminal, issue the following command.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker run hello-world</span></code></pre></div>
<p>Here, <code>$</code> represents the prompt, which is not part of the command. If your Docker setup is working, you should get the following result.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker run hello-world</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> from Docker!</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">This</span> message shows that your installation appears to be working correctly.</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> generate this message, Docker took the following steps:</span>
<span id="cb2-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1.</span> The Docker client contacted the Docker daemon.</span>
<span id="cb2-6"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2.</span> The Docker daemon pulled the <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello-world"</span> image from the Docker Hub.</span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">amd64</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-8"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">3.</span> The Docker daemon created a new container from that image which runs the</span>
<span id="cb2-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">executable</span> that produces the output you are currently reading.</span>
<span id="cb2-10"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">4.</span> The Docker daemon streamed that output to the Docker client, which sent it</span>
<span id="cb2-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> your terminal.</span>
<span id="cb2-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">To</span> try something more ambitious, you can run an Ubuntu container with:</span>
<span id="cb2-13"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> ubuntu bash</span>
<span id="cb2-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Share</span> images, automate workflows, and more with a free Docker ID:</span>
<span id="cb2-15"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://cloud.docker.com/</span></span>
<span id="cb2-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">For</span> more examples and ideas, visit:</span>
<span id="cb2-17"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://docs.docker.com/engine/userguide/</span></span></code></pre></div>
</section>
</section>
<section id="downloading-workshop-config-files" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Downloading Workshop Config Files</h1>
<p>Download the workshop’s <a href="https://drive.google.com/uc?export=view&amp;id=1CEnhcye1ifSdQHJKBalf20ZiVdeIyZII">Dockerfile</a> and accompanying <a href="https://drive.google.com/uc?export=view&amp;id=15hFA_kSpGmUddMa8tSyqN574h-SIB_zA">start.sh</a>. Save the files to a folder where you will keep workshop materials. Let us call this directory <code>/path/to/workshop</code>.</p>
<p>In Windows, my web browser renamed <code>Dockerfile</code> to <code>Dockerfile.txt</code> when it was downloaded. If this happens, rename the file and remove the <code>.txt</code> extension.</p>
<p>After downloading <code>start.sh</code>, Linux and Mac users may need to modify its permissions before the Docker container will run. Ensure that the script can be executed via the following command.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> chmod +x start.sh</span></code></pre></div>
</section>
<section id="preparing-and-running-the-workshop-container" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Preparing and Running the Workshop Container</h1>
<p>The following “build” command downloads and builds all of the prerequisites used in the container. It may take a while to run, especially on a slower network or a slower computer. For me it typically takes 20 or 30 minutes (roughly).</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rworkshop /path/to/workshop</span></code></pre></div>
<p>The build command does not need to be run again unless the Dockerfile is changed, or unless your deployment changes. If the build was successful, the last few lines of output should be something like the following.</p>
<pre><code>Successfully built f5055a2787e5
Successfully tagged rworkshop:latest</code></pre>
<p>The container can now be run using the following “run” command (which is proceeded by defining two environment variables for our convenience).</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> export XSOCK=/tmp/.X11-unix/X0</span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> export EXT=/path/to/workshop</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$XSOCK</span>:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$XSOCK</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$EXT</span>:/home/rstudio/ext <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 8787:8787 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rworkshop</span></code></pre></div>
<p>Note that: * The option <code>-v $XSOCK:$XSOCK</code> allows the container to display graphics. This is useful for packages such as <code>Rcmdr</code>. * The option <code>-v $EXT:/home/rstudio/ext</code> makes the directory <code>$EXT</code> on your computer available inside the container as <code>/home/rstudio/ext</code>. This will allow you to load files from your local machine into the container, and to save work from the container back to your local machine. * The option <code>-p 8787:8787</code> exposes port 8787 from the container on your computer. This is needed to use Rstudio in the container. * The flags <code>-i</code> and <code>-t</code> are specified because the container is interactive. * The <code>\</code> character is used to break up a long command into multiple lines.</p>
</section>
<section id="using-r-in-the-container" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Using R in the Container</h1>
<p>Once the container is successfully started, you will encounter a Linux command prompt like the following.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rstudio@a8f9a900c791:~$</span></span></code></pre></div>
<section id="r-on-the-command-line" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="r-on-the-command-line"><span class="header-section-number">5.1</span> R on the Command Line</h2>
<p>To start R on the command line, issue the <code>R</code> command.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rstudio@a8f9a900c791:~$</span> R</span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cat<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world\n"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world</span></code></pre></div>
</section>
<section id="rstudio" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="rstudio"><span class="header-section-number">5.2</span> Rstudio</h2>
<p>To connect to Rstudio server, open a web browser on your laptop.</p>
<ul>
<li><p><strong>Mac</strong> and <strong>Linux</strong> users should navigate to the URL <a href="http://localhost:8787" class="uri">http://localhost:8787</a>.</p></li>
<li><p><strong>Windows</strong> users should recall the IP address they noted back in section 2.1. Suppose your assigned IP was <code>192.168.99.100</code> (which is the one I have in the screenshot); navigate to the URL <a href="http://192.168.99.100:8787" class="uri">http://192.168.99.100:8787</a>. If you forgot the IP address, start up another Docker Terminal and run the following.</p></li>
</ul>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker-machine ls</span></code></pre></div>
<p>A login prompt should appear in your browser. Enter <code>rstudio</code> as both the username and the password.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://andrewraim.github.io/images/Kerala2018/rstudio-server-login.png" class="img-fluid figure-img"></p>
<figcaption>Logging into Rstudio Server</figcaption>
</figure>
</div>
<p>Now you should be ready to use Rstudio in your web browser.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://andrewraim.github.io/images/Kerala2018/rstudio-server-screen.png" class="img-fluid figure-img"></p>
<figcaption>Rstudio Server in browser</figcaption>
</figure>
</div>
</section>
<section id="r-commander" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="r-commander"><span class="header-section-number">5.3</span> R Commander</h2>
<p>To launch the R Commander GUI, first start R via the command line or Rstudio. Then issue the following command.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Rcmdr)</span></code></pre></div>
</section>
<section id="running-mpi-jobs" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="running-mpi-jobs"><span class="header-section-number">5.4</span> Running MPI Jobs</h2>
<p>To demonstrate running an MPI job, let us use a simple Hello World example. Open a text editor on your laptop and save the following code to the file <code>/path/to/workshop/hello.R</code></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pbdMPI, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb11-2"></span>
<span id="cb11-3">msg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world from process %d</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comm.rank</span>(), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comm.size</span>())</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comm.cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Say hello:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comm.cat</span>(msg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all.rank =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">finalize</span>()</span></code></pre></div>
<p>Recall that this file will be accessible inside the container via the path <code>/home/rstudio/ext/hello.R</code>. Inside the container, you should be able to run the script in parallel via the <code>mpirun</code> command.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rstudio@a8f9a900c791:~$</span> mpirun <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-np</span> 4 Rscript ~/ext/hello.R</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Say</span> hello:</span>
<span id="cb12-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COMM.RANK</span> = 0</span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 0</span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COMM.RANK</span> = 1</span>
<span id="cb12-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COMM.RANK</span> = 2</span>
<span id="cb12-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 1</span>
<span id="cb12-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 2</span>
<span id="cb12-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COMM.RANK</span> = 3</span>
<span id="cb12-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 3</span></code></pre></div>
<p>Outputs from the container should be saved to <code>/home/rstudio/ext</code>. This will allow you to view images, PDFs, etc using the tools already installed on your laptop.</p>
<p>If you made it this far, congratulations - your laptop is ready!</p>
</section>
</section>
<section id="more-on-docker" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> More on Docker</h1>
<p>For a list of Docker commands, see <a href="https://docs.docker.com/engine/reference/commandline/docker" class="uri">https://docs.docker.com/engine/reference/commandline/docker</a>. Here we will mention a few specific ones. If you would like a video tutorial, there appear to be several good ones on YouTube such as <a href="https://youtu.be/pa2wHWQ6WA8">this one</a>.</p>
<p>List active Docker containers.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> [araim@araim-inspiron docker]$ docker ps</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CONTAINER</span> ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span>
<span id="cb13-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">f117630f47b8</span>        rworkshop           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/etc/start.sh"</span>     8 seconds ago       Up 7 seconds        0.0.0.0:8787-<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>8787/tcp   hopeful_elion</span></code></pre></div>
<p>Normally, our rworkshop container will stop running when you log out of its shell. In case something went wrong with the container listed above and we wanted to kill it, we could use the following command from another terminal window.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker kill f117630f47b8</span>
<span id="cb14-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">f117630f47b8</span></span></code></pre></div>
<p>List Docker images that have been deployed onto your machine.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker images</span>
<span id="cb15-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">REPOSITORY</span>          TAG                 IMAGE ID            CREATED             SIZE</span>
<span id="cb15-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rworkshop</span>           latest              d658ef03dc24        13 hours ago        1.98GB</span>
<span id="cb15-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rocker/rstudio</span>      3.4.3               f206114fe549        3 weeks ago         1.08GB</span>
<span id="cb15-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hello-world</span>         latest              1815c82652c0        6 months ago        1.84kB</span></code></pre></div>
<p>The <code>rworkshop</code> and <code>rocker/rstudio</code> images are rather large, so you may need to remove them after the workshop. Here we will remove the <code>hello-world</code> image, for demonstration purposes.</p>
<pre class="{bash}"><code>$ docker image rm 1815c82652c0
Untagged: hello-world:latest
Untagged: hello-world@sha256:f3b3b28a45160805bb16542c9531888519430e9e6d6ffc09d72261b0d26ff74f
Deleted: sha256:1815c82652c03bfd8644afda26fb184f2ed891d921b20a0703b46768f9755c57
Deleted: sha256:45761469c965421a92a69cc50e92c01e0cfa94fe026cdd1233445ea00e96289a</code></pre>
</section>
<section id="if-you-cannot-install-docker" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> If You Cannot Install Docker</h1>
<p>Installing and running Docker requires administrator-level access to your computer. For example, if using a laptop issued by your employer, you may not have administrator access but may have R and Rstudio already installed. For the benefit of these attendees, we will list individual components that we have used in preparing the workshop.</p>
<p>The major disadvantage of installing the components individually is that you may not be able to run some of the parallel and distributed computing examples. For example, the <a href="https://stat.ethz.ch/R-manual/R-devel/library/parallel/html/mclapply.html">mclapply function depends on forking</a>, and therefore cannot be used directly in Windows. Also, our distributed computing examples rely on MPI, but we (the presenters) do not have experience installing and configuring MPI libraries in Windows.</p>
<p>Check the version numbers of components which you may have already installed - especially R, Rstudio, and any R packages. Some parts of the workshop may not be accessible with older versions.</p>
<section id="install-r" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="install-r"><span class="header-section-number">7.1</span> Install R</h2>
<p>Install R from <a href="https://cran.r-project.org/">CRAN</a>. Windows users should navigate to “Download R for Windows” at the top of the page. We are using version 3.4.3.</p>
</section>
<section id="install-rstudio" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="install-rstudio"><span class="header-section-number">7.2</span> Install Rstudio</h2>
<p>Install <a href="https://www.rstudio.com/">Rstudio</a>. Click <code>Products =&gt; RStudio</code> on the top menu, and look for a button labeled <code>Download Rstudio Desktop</code>. Select <code>RStudio Desktop Open Source License</code> among the available versions. We are using version 1.1.383.</p>
</section>
<section id="install-the-rcpp-package" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="install-the-rcpp-package"><span class="header-section-number">7.3</span> Install the Rcpp package</h2>
<p>See <a href="https://support.rstudio.com/hc/en-us/articles/200486498-Package-Development-Prerequisites" class="uri">https://support.rstudio.com/hc/en-us/articles/200486498-Package-Development-Prerequisites</a> for instructions to install the prerequisites (compilers, important libraries, etc). Once the prerequisites are installed, simply install <code>Rcpp</code> as you would any other package.</p>
<p>To test your Rcpp environment, try the following in RStudio. 1. Select <code>File =&gt; New File =&gt; C++ File</code> from the main menu. This will create a simple Rcpp program.<br>
2. Save the program, say, as <code>example.cpp</code>.<br>
3. Click the <code>Source</code> button, which is located in the upper-right corner of the panel with the <code>example.cpp</code> source code. This should produce the following output.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timesTwo</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb17-2">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">84</span></span></code></pre></div>
</section>
<section id="install-mpi" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="install-mpi"><span class="header-section-number">7.4</span> Install MPI</h2>
<p>There are several MPI implementations available, such as OpenMPI and MVAPICH2. The instructions will vary based on your choice of implementation, as well as your hardware and operating system. You are on your own here; good luck! If your installation is successful, you should be able to run the following minimal example.</p>
<p>First, create a new file called <code>hello_mpi.c</code> with the following contents.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb18-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;stdio.h&gt;</span></span>
<span id="cb18-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;mpi.h&gt;</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> argc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[])</span></span>
<span id="cb18-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> np<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> processor_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MPI_MAX_PROCESSOR_NAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> processor_name_len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-9"></span>
<span id="cb18-10">    MPI_Init<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>argc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-11"></span>
<span id="cb18-12">    MPI_Comm_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MPI_COMM_WORLD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>np<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-13">    MPI_Comm_rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MPI_COMM_WORLD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-14">    MPI_Get_processor_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>processor_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>processor_name_len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15"></span>
<span id="cb18-16">    printf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world from process </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%03d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> out of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%03d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, processor name </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-17">        id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> np<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> processor_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-18"></span>
<span id="cb18-19">    MPI_Finalize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Now compile and run the program with MPI.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> mpicc hello-mpi.c <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> hello-mpi</span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> mpirun <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-np</span> 4 hello-mpi</span>
<span id="cb19-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 000 out of 004, processor name localhost</span>
<span id="cb19-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 001 out of 004, processor name localhost</span>
<span id="cb19-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 002 out of 004, processor name localhost</span>
<span id="cb19-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Hello</span> world from process 003 out of 004, processor name localhost</span></code></pre></div>
<p>Depending on your platform and choice of MPI implementation, your commands may be different. The string <code>localhost</code> in the output will be replaced with your machine’s hostname.</p>
</section>
<section id="install-r-packages" class="level2" data-number="7.5">
<h2 data-number="7.5" class="anchored" data-anchor-id="install-r-packages"><span class="header-section-number">7.5</span> Install R Packages</h2>
<p>Download the script <a href="https://drive.google.com/uc?export=view&amp;id=12273JFSirYb1G8pPx9fRYNtgZ6IrpFGx">install.R</a> and run it in R to obtain packages which will be used in the workshop. Suppose we have placed it into the directory <code>/path/to/workshop</code>. Run the following command in R.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/workshop/install.R"</span>)</span></code></pre></div>
<p>To make sure your package versions are up to date, open Rstudio and click <code>Tools =&gt; Check for Package Updates</code> on the main menu.</p>


</section>
</section>

 ]]></description>
  <category>workshop</category>
  <guid>https://andrewraim.github.io/posts/2017-12-20-Kerala-workshop.html</guid>
  <pubDate>Fri, 05 Jan 2018 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Rcpp Workshop at UMBC</title>
  <link>https://andrewraim.github.io/posts/2017-08-07-UMBC-workshop-Rcpp.html</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Please note that the workshop date has been moved from Friday Sept 8, 2017 to Friday Sept 22, 2017. See below for details.</p>
</div>
</div>
<p>Iris Gauran and I are planning to give a half-day workshop on Rcpp at UMBC. Tentative details are given below. Part of the workshop will be a “quick start”, where we will demonstrate accessing C++ code from R via toy examples. Attendees are encouraged to prepare their laptops for Rcpp programming, and bring them to the workshop to follow along with this portion.</p>
<p>We will focus on Rcpp programming in RStudio, which provides a common interface across all major platforms (Windows, Mac, and Linux), and helps to automate some procedural tasks.</p>
<ol type="1">
<li>Install R (<a href="http://www.r-project.org" class="uri">http://www.r-project.org</a>). The current version as of this writing is 3.4.1 “Single Candle”.</li>
<li>Install RStudio Desktop (<a href="http://www.rstudio.com" class="uri">http://www.rstudio.com</a>). The current version is 1.0.153.</li>
<li>Install the <code>Rcpp</code>, <code>RcppArmadillo</code>, and <code>RcppGSL</code> packages.</li>
<li>Some additional libraries may be needed to compile C++ programs on your computer. These differ depending on your operating system. See <a href="http://support.rstudio.com/hc/en-us/articles/200486498-Package-Development-Prerequisites" class="uri">http://support.rstudio.com/hc/en-us/articles/200486498-Package-Development-Prerequisites</a>.</li>
</ol>
<p>This may be a good time to upgrade if you have older versions of R, RStudio, or any of the listed packages.</p>
<p>To test your Rcpp environment, try the following in RStudio.</p>
<ol type="1">
<li>Select <code>File =&gt; New File =&gt; C++ File</code> from the main menu. This will create a simple Rcpp program.</li>
<li>Save the program, say, as <code>example.cpp</code>.</li>
<li>Click the <code>Source</code> button, which is located in the upper-right corner of the panel with the <code>example.cpp</code> source code. This should produce the output</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timesTwo</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb1-2">[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">84</span></span></code></pre></div>
<hr>
<p><strong>Location:</strong> University of Maryland, Baltimore County.<br>
<strong>Room:</strong> MP 401 (Math/Stat Seminar Room).<br>
<strong>Time:</strong> Friday Sept 22, 1 - 4:30pm.<br>
<strong>Cost:</strong> This workshop is free for the UMBC community.<br>
<strong>Prerequisites:</strong> intermediate knowledge in a high level language like R, Python, or Matlab. Familiarity with R and RStudio is highly recommended.<br>
<strong>Snacks:</strong> Light refreshments (coffee and bagels) will be provided.</p>
<p><strong>Abstract</strong><br>
R is the preferred computing environment for many statisticians, and is used both in research and applied problems. R has achieved tremendous popularity because it is free, open source, and available on all modern platforms (Windows, Mac, and Linux). The R programming language is simple and intuitive, and well-suited for fast prototyping of complicated algorithms. However, R users can often find the performance of their programs to be lacking.</p>
<p>This workshop will demonstrate Rcpp, an extension of R that facilitates interoperability between R and C++ (Eddelbuettel, 2013). With Rcpp, computationally intensive parts of your program can be written in C++ and seamlessly called from R, potentially giving dramatic performance improvements within the familiar R user environment. We will provide a quick start for new Rcpp users through simple examples, and also examine several larger-scale statistical applications. C++ programming is usually more burdensome than R programming, so we will discuss tradeoffs between optimizing R code and migrating to C++, and ways to minimize suffering while making the transition.</p>
<p><strong>References</strong></p>
<ul>
<li>Dirk Eddelbuettel. Seamless R and C++ Integration with Rcpp. Springer, 2013.</li>
<li>Also see <a href="http://www.rcpp.org" class="uri">http://www.rcpp.org</a>.</li>
</ul>



 ]]></description>
  <category>workshop</category>
  <guid>https://andrewraim.github.io/posts/2017-08-07-UMBC-workshop-Rcpp.html</guid>
  <pubDate>Mon, 07 Aug 2017 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Web Page Migration</title>
  <link>https://andrewraim.github.io/posts/2017-03-15-new-webpage.html</link>
  <description><![CDATA[ 




<p>I am now using <a href="https://pages.github.com">GitHub Pages</a> to host my website, along with the static site generator <a href="https://jekyllrb.com">Jekyll</a>. My <a href="http://www.umbc.edu/~araim1">previous website</a> was hosted at UMBC.</p>
<p>Here is a quick test of Latex. An inline equation is <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20x%5E2%20e%5E%7B-x%7D"> inline. And an equation on its own line is <img src="https://latex.codecogs.com/png.latex?%0A%5CPhi(x)%20=%0A%5Cint_%7B-%5Cinfty%7D%5E%7Bx%7D%20%5Cfrac%7B1%7D%7B%5Csigma%20%5Csqrt%7B2%5Cpi%7D%7D%0A%5Cexp%20%5Cleft(%20-%5Cfrac%7B1%7D%7B2%5Csigma%5E2%7D%20(t%20-%20%5Cmu)%5E2%20%5Cright)%20dt.%0A"></p>
<p>Here is an example of code.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(x)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://andrewraim.github.io/posts/2017-03-15-new-webpage_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>admin</category>
  <guid>https://andrewraim.github.io/posts/2017-03-15-new-webpage.html</guid>
  <pubDate>Wed, 15 Mar 2017 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
